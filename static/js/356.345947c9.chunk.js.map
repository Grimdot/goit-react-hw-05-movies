{"version":3,"file":"static/js/356.345947c9.chunk.js","mappings":"gTAGaA,EAAmBC,EAAAA,GAAAA,IAAH,0CAIhBC,EAAiBD,EAAAA,GAAAA,IAAH,wDAKdE,EAAiBF,EAAAA,GAAAA,IAAH,qEAKdG,EAAkBH,EAAAA,GAAAA,KAAH,8CAIfI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8QAkBVM,EAAsBN,EAAAA,GAAAA,IAAH,wDAKnBO,GAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,kP,SC0D5B,EAtFgB,WAAO,IAAD,IACpB,GAAwCS,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAQ,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAmCzC,IAjCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,0HAEGC,EAAAA,EAAAA,IAAgBP,GAFnB,OAEXQ,EAFW,OAIfC,EAMED,EANFC,YACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,OAGFjB,EAAgB,CACdkB,OAAQN,EAAW,yCACmBA,GADnB,sCAGnBC,MAAOA,EACPM,YAAaL,EAAaM,MAAM,KAAK,GACrCC,UAAWC,KAAKC,MAAqB,GAAfR,GACtBC,SAAUA,EACVC,OAAQA,EAAOO,KAAI,SAAAC,GACjB,OAAOA,EAAMC,IACd,MAtBc,gDAyBjBC,IAAAA,OAAAA,QAAwB,2BAzBP,yDAAH,qDA6BlBlB,GACD,GAAE,CAACN,IAECJ,EAAL,CAIA,IAAQmB,EACNnB,EADMmB,OAAQL,EACdd,EADcc,MAAOM,EACrBpB,EADqBoB,YAAaE,EAClCtB,EADkCsB,UAAWJ,EAC7ClB,EAD6CkB,OAAQD,EACrDjB,EADqDiB,SAGvD,OACE,UAAC5B,EAAD,YACE,SAACK,EAAD,CAAYmC,GAAIvB,EAAUwB,MAAO,CAAEC,QAAS,SAA5C,sBAIA,UAACxC,EAAD,YACE,gBAAKyC,IAAKb,EAAQc,IAAI,iBAEtB,UAACzC,EAAD,YACE,0BACGsB,EADH,eACeM,EADf,SAGA,wBACE,SAAC3B,EAAD,oBAAqB6B,EAArB,UAEF,qCACA,uBAAIJ,EAAOgB,KAAK,SAChB,sCACA,uBAAIjB,WAIR,mBAEA,oDAEA,UAACrB,EAAD,YACE,SAACC,EAAD,CAAiBgC,GAAG,OAApB,qBACA,SAAChC,EAAD,CAAiBgC,GAAG,UAApB,2BAGF,mBAEA,SAAC,KAAD,MAvCH,CA0CF,C","sources":["pages/Details/Details.styled.jsx","pages/Details/Details.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const MovieDetailsWrap = styled.div`\n  padding: 30px;\n`;\n\nexport const AboutMovieWrap = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const MovieStatsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const VotesPercentage = styled.span`\n  font-weight: bold;\n`;\n\nexport const GoBackLink = styled(Link)`\n  padding: 5px;\n  margin-bottom: 16px;\n\n  width: 60px;\n\n  text-decoration: none;\n  border: 1px solid black;\n  border-radius: 4px;\n  color: black;\n  transition: color, ease-in-out, 250ms;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n\nexport const MoreDetailsLinkWrap = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const MoreDetailsLink = styled(NavLink)`\n  margin-bottom: 16px;\n\n  font-size: 26px;\n  text-decoration: none;\n  color: black;\n  transition: color, ease-in-out, 250ms;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n\n  &.active {\n    color: red;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getMovieDetails } from 'services/moviesService';\n\nimport {\n  MovieDetailsWrap,\n  GoBackLink,\n  AboutMovieWrap,\n  MovieStatsWrap,\n  VotesPercentage,\n  MoreDetailsLinkWrap,\n  MoreDetailsLink,\n} from './Details.styled';\n\nconst Details = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { id } = useParams();\n\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const initialFetch = async () => {\n      try {\n        const movie = await getMovieDetails(id);\n        const {\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        } = movie;\n\n        setMovieDetails({\n          poster: poster_path\n            ? `https://image.tmdb.org/t/p/w400${poster_path}`\n            : `https://via.placeholder.com/400x600`,\n          title: title,\n          releaseYear: release_date.split('-')[0],\n          userVotes: Math.floor(vote_average * 10),\n          overview: overview,\n          genres: genres.map(genre => {\n            return genre.name;\n          }),\n        });\n      } catch {\n        Notiflix.Notify.failure('Something went wrong :(');\n      }\n    };\n\n    initialFetch();\n  }, [id]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const { poster, title, releaseYear, userVotes, genres, overview } =\n    movieDetails;\n\n  return (\n    <MovieDetailsWrap>\n      <GoBackLink to={backLink} style={{ display: 'block' }}>\n        Go back\n      </GoBackLink>\n\n      <AboutMovieWrap>\n        <img src={poster} alt=\"Film poster\" />\n\n        <MovieStatsWrap>\n          <h1>\n            {title} {`(${releaseYear})`}\n          </h1>\n          <p>\n            <VotesPercentage>{`${userVotes}%`}</VotesPercentage>\n          </p>\n          <h2>Genres:</h2>\n          <p>{genres.join(', ')}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n        </MovieStatsWrap>\n      </AboutMovieWrap>\n\n      <hr />\n\n      <h2>Additional Information</h2>\n\n      <MoreDetailsLinkWrap>\n        <MoreDetailsLink to=\"cast\"> Cast </MoreDetailsLink>\n        <MoreDetailsLink to=\"reviews\"> Reviews </MoreDetailsLink>\n      </MoreDetailsLinkWrap>\n\n      <hr />\n\n      <Outlet />\n    </MovieDetailsWrap>\n  );\n};\n\nexport default Details;\n"],"names":["MovieDetailsWrap","styled","AboutMovieWrap","MovieStatsWrap","VotesPercentage","GoBackLink","Link","MoreDetailsLinkWrap","MoreDetailsLink","NavLink","useState","movieDetails","setMovieDetails","location","useLocation","id","useParams","backLink","state","from","useEffect","initialFetch","getMovieDetails","movie","poster_path","title","release_date","vote_average","overview","genres","poster","releaseYear","split","userVotes","Math","floor","map","genre","name","Notiflix","to","style","display","src","alt","join"],"sourceRoot":""}